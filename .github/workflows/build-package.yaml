name: Build and Package CLI Tool

on:
  push:
    branches:
      - main

defaults:
  env:
    ai_version: 1.0.${{ github.run_number }}
    ai_version_suffix: alpha

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x' # Set the desired .NET version

      - name: Set up environment variables
        run: |
          echo "BUILD_ARTIFACTSTAGINGDIRECTORY=$PWD/artifacts" >> $GITHUB_ENV

      - name: Build and package CLI tool
        id: build-package
        run: |
          dotnet build -c Release /p:VersionAssembly=${{ env.ai_version }} /p:Version=${{ env.ai_version }} /p:AssemblyVersion=${{ env.ai_version }} /p:VersionSuffix=${{ env.ai_version_suffix }} --version-suffix  ${{ env.ai_version_suffix }}
          dotnet pack -c Release --output ${{env.BUILD_ARTIFACTSTAGINGDIRECTORY}} /p:Version=${{ env.ai_version }} /p:PackageVersion=${{ env.ai_version }} --version-suffix ${{ env.ai_version_suffix }} --version-suffix  ${{ env.ai_version_suffix }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: cli-tool-artifacts
          path: ${{env.BUILD_ARTIFACTSTAGINGDIRECTORY}}

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '6.0.x' # Set the desired .NET version

      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: cli-tool-artifacts
          path: artifacts

      - name: Extract package version
        id: extract-version
        run: |
          echo "Package files: $(ls artifacts/*.nupkg)"
          package_path=$(ls artifacts/*.nupkg)
          package_version=$(dotnet nuget list source "$package_path" | grep -Eo "[0-9]+\.[0-9]+\.[0-9]+")
          echo "::set-output name=package_version::$package_version"

      - name: Create GitHub Release
        id: create-release
        uses: softprops/action-gh-release@v1
        with:
          files: artifacts/*.nupkg
          tag_name: ${{steps.extract-version.outputs.package_version}}
          title: Release ${{steps.extract-version.outputs.package_version}}
          body: |
            Release of the CLI tool version ${{steps.extract-version.outputs.package_version}}
