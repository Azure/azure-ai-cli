<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi">

  <Product Id="*" Name="Azure AI CLI" Language="1033" Version="$(var.version)" Manufacturer="Microsoft" UpgradeCode="436172626F6E20697320636F6F6C2121">
    <Package InstallerVersion="500" Compressed="yes" InstallScope="perMachine" Platform="$(var.platform)" />
    <!--
    To prevent problems with bundle upgrades, use MajorUpgrade element here + ProductSearch in the bundle .wxs. Ref.
    https://stackoverflow.com/questions/15156081/wix-bundle-upgrade-a-new-version-of-msi-is-installed-before-the-old-version-is
    -->
    <MajorUpgrade AllowDowngrades="no" DowngradeErrorMessage="A newer version is already installed."/>

    <!-- Below can be used with single MSI-only installations -->
    <!--
    <Upgrade Id="436172626F6E20697320636F6F6C2121">
      <UpgradeVersion OnlyDetect="yes" Property="SELFFOUND"
        Minimum="$(var.version)" IncludeMinimum="yes"
        Maximum="$(var.version)" IncludeMaximum="yes" />
      <UpgradeVersion OnlyDetect="yes" Property="NEWERFOUND"
        Minimum="$(var.version)" IncludeMinimum="no" />
      <UpgradeVersion OnlyDetect="no" Property="PREVIOUSFOUND"
        Minimum="1.0.0" IncludeMinimum="yes"
        Maximum="$(var.version)" IncludeMaximum="no" />
    </Upgrade>

    <CustomAction Id="AlreadyUpdated" Error="This version is already installed." />
    <CustomAction Id="NoDowngrade" Error="A newer version is already installed." />
    -->

    <Media Id="1" Cabinet="media1.cab" EmbedCab="yes" />

    <Directory Id="TARGETDIR" Name="SourceDir">
      <Directory Id="ProgramFilesFolder">
        <Directory Id="INSTALLFOLDER" Name="Azure AI CLI" />
      </Directory>
    </Directory>

    <Property Id="CLI_INSTALL_ERROR" Secure="yes" />
    <CustomAction Id="RunInstallBatchScript"
              Script="vbscript"
              Execute="immediate">
      <![CDATA[
        On Error Resume Next
        Dim objShell, intReturnCode, logFile
        Set objShell = CreateObject("WScript.Shell")
        logFile = objShell.ExpandEnvironmentStrings("%TEMP%") & "\InstallCLI.log"
        intReturnCode = objShell.Run("$(sys.SOURCEFILEDIR)\InstallCLI.cmd >" & logFile & " 2>&1", 0, True)
        If intReturnCode <> 0 Then
            Set fso = CreateObject("Scripting.FileSystemObject")
            Set file = fso.OpenTextFile(logFile, 1)
            text = file.ReadAll
            file.Close
            Session.Property("CLI_INSTALL_ERROR") = "Error installing AI CLI: " & text
        End If
      ]]>
    </CustomAction>
    <CustomAction Id="RunUninstallBatchScript" FileKey="UninstallBatchScript" ExeCommand="" Execute="immediate" Return="ignore"/>
    <CustomAction Id="RunUninstallOnInstallFailureBatchScript" FileKey="UninstallBatchScript" ExeCommand="" Execute="immediate" Return="ignore"/>

    <ComponentGroup Id="ProductComponents" Directory="INSTALLFOLDER">
      <Component Id="InstallBatchScriptComponent" Guid="436172626F6E20697320636F6F6C2120">
        <File Id="InstallBatchScript" Source="$(sys.SOURCEFILEDIR)\InstallCLI.cmd" KeyPath="yes"/>
      </Component>
      <Component Id="UninstallBatchScriptComponent" Guid="436172626F6E20697320636F6F6C2122">
        <File Id="UninstallBatchScript" Source="$(sys.SOURCEFILEDIR)\UninstallCLI.cmd" KeyPath="yes"/>
      </Component>
    </ComponentGroup>

    <InstallExecuteSequence>
      <!--
      <Custom Action="AlreadyUpdated" After="FindRelatedProducts">SELFFOUND</Custom>
      <Custom Action="NoDowngrade" After="FindRelatedProducts">NEWERFOUND</Custom>
      -->
      <Custom Action="RunInstallBatchScript" After="InstallFinalize">NOT Installed OR REINSTALL OR UPGRADINGPRODUCTCODE</Custom>
      <Custom Action="RunUninstallBatchScript" Before="RemoveFiles">Installed AND NOT REINSTALL AND NOT UPGRADINGPRODUCTCODE</Custom>
      <!-- Ensure INSTALLFOLDER is cleared if installation fails -->
      <Custom Action="RunUninstallOnInstallFailureBatchScript" After="RunInstallBatchScript">NOT Installed AND CLI_INSTALL_ERROR</Custom>
    </InstallExecuteSequence>

    <Feature Id="MainFeature" Title="Main Feature" Level="1">
      <ComponentGroupRef Id="ProductComponents" />
    </Feature>

    <WixVariable Id="WixUILicenseRtf" Value="$(sys.SOURCEFILEDIR)\CLI_License.rtf"/>
    <UIRef Id="WixUI_Minimal" />

  </Product>
</Wix>
