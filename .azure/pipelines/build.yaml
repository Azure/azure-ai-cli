trigger:
  branches:
    include:
      - main
      - refs/tags/*
pr:
  - main

pool:
  vmImage: ubuntu-latest

jobs:
  - job: Setup
    steps:
    - task: Bash@3
      inputs:
        filePath: ./.azure/pipelines/scripts/set-variables.sh
      displayName: 'Set up environment variables'

  - job: Build
    dependsOn: Setup
    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore packages
      inputs:
        command: restore
        projects: 'src/ai/**/*.csproj'
    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: build
        projects: 'src/ai/**/*.csproj'
        arguments: '--configuration Release'
    - task: DotNetCoreCLI@2
      displayName: Pack
      env:
        AI_VERSION: $(AICLIVersion)
      inputs:
        command: pack
        packagesToPack: 'src/ai/ai-cli.csproj'
        versioningScheme: 'byEnvVar'
        versionEnvVar: 'AI_VERSION'
        arguments: '--configuration Release'
    - task: PublishPipelineArtifact@1
      displayName: Publish artifacts
      inputs:
        targetPath: '$(Build.StagingDirectory)'
        artifact: 'ai-cli-artifacts'

  - job: Publish
    dependsOn: Build
    condition: and(succeeded(), eq(variables['ShouldCreateRelease'], 'true'))
    steps:
    - task: DownloadPipelineArtifact@2
      displayName: Download artifacts
      inputs:
        artifact: 'ai-cli-artifacts'
    - task: AzureCLI@2
      displayName: Upload package to Azure
      inputs:
        azureSubscription: 'Carbon Dropper (CSSpeechStorage Drop)'
        scriptType: 'bash'
        arguments: '$(Build.StagingDirectory)/$(AICLINuPkgFileName) private/ai/$(AICLINuPkgFileName)'
        scriptPath: './.azure/pipelines/scripts/upload-file.sh'