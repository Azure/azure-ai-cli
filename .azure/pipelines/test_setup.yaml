
steps:
# -----------------------------------------------------------------------------
# Download the ai CLI artifacts
# -----------------------------------------------------------------------------
- task: DownloadPipelineArtifact@2
  displayName: Download ai-cli-artifacts
  inputs:
    artifact: 'ai-cli-artifacts'
    targetPath: '$(Build.ArtifactStagingDirectory)/ai-cli-artifacts'
- task: CopyFiles@2
  displayName: Copy downloaded ai-cli-artifacts
  inputs:
    Contents: '**/*'
    SourceFolder: $(Build.ArtifactStagingDirectory)/ai-cli-artifacts
    TargetFolder: $(TargetFolder)
    FlattenFolders: true
- task: Bash@3
  displayName: List files...
  inputs:
    targetType: 'inline'
    script: |
      echo listing for $(System.DefaultWorkingDirectory)
      ls -la $(System.DefaultWorkingDirectory)
      echo listing for $(Build.ArtifactStagingDirectory)
      ls -la $(Build.ArtifactStagingDirectory)

# -----------------------------------------------------------------------------
# Install the ai CLI
# -----------------------------------------------------------------------------
- task: DotNetCoreCLI@2
  displayName: INSTALL AI - Installing ai CLI via `dotnet tool install`
  inputs:
    includeNuGetOrg: false
    command: custom
    custom: tool
    version: '7.0.x'
    arguments: install
      --ignore-failed-sources
      --add-source "$(System.DefaultWorkingDirectory)"
      --global Azure.AI.CLI
      --version "$(AICLIVersion)"

# -----------------------------------------------------------------------------
# Finish job prep (mkdir, config cli)
# -----------------------------------------------------------------------------
- bash: |
    env | sort
    which dotnet
    dotnet --version
    echo "TestResultsPath: $(TestResultsPath)"
    mkdir $(TestResultsPath)
    echo "LocalInputPath: $(LocalInputPath)"
    ls -la $(LocalInputPath)
    ai config system --set input.path $(LocalInputPath)
    ai config --find
    echo "DefaultWorkingDirectory: $(System.DefaultWorkingDirectory)"
    ls -la $(System.DefaultWorkingDirectory)
  displayName: Finish job prep (mkdir, config cli)
  workingDirectory: '$(System.DefaultWorkingDirectory)'

# -----------------------------------------------------------------------------
# Build the YamlTestAdapter
# -----------------------------------------------------------------------------
- task: DotNetCoreCLI@2
  displayName: Build Test Adapters
  inputs:
    includeNuGetOrg: false
    command: build
    version: '7.0.x'
    projects: '**/*adapter/*.csproj'
    arguments:
      -c $(BuildConfiguration)
      /p:Platform=x64
      /p:LocalBinOutputPath="$(LocalBinOutputPath)"